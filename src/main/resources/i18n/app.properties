app.title=Lunch manager
app.stackTitle=Application stack:
app.description=<h5>Development of a web application <i>"Lunch manager"</i></h5>\
  <p>The voting system for deciding where to have lunch. Each restaurant provides a new menu every day.<br>\
  <a href="https://github.com/vladislav1is/restaurant-voting">Java Enterprise project</a> with registration/authorization and role-based access rights (USER, ADMIN).<br>\
  All REST interfaces are covered with JUnit tests by Spring MVC Test and Spring Security Test.</p>\
  <ul><li><b>2 types of users: admin and regular users</b></li>\
  <li>Admin can input a restaurant and its lunch menu of the day (usually 2-5 items)</li>\
  <li>Admin can create/edit/delete users, users - can manage their profile data via UI (AJAX) and REST with basic authorization</li>\
  <li><b>Menu changes every day (admins do the updates)</b></li>\
  <li>Dishes can be filtered by date</li>\
  <li>Users can vote for restaurant where they want to have lunch</li>\
  <li><b>Only one vote is counted for each user</b></li>\
  <li>If user votes again the same day:\
  <ul><li>If it's <b>before 11:00</b> we assume that he changed his mind</li>\
  <li>If it's <b>after 11:00</b> it's already late, the vote cannot be changed</li></ul>\
  </li>\
  <li>The restaurants row color <b>depends on daily user vote (restaurant param)</b></li>\
  </ul>\
  <p>Visit github repository via link which contains the code, README.md with API documentation and curl commands to test it better (<a href="swagger-ui/index.html">link to Swagger</a>)</p>
app.oas=OpenAPI Specification
app.footer=<a href="https://github.com/vladislav1is/restaurant-voting" target=_blank>Spring 5/JPA Enterprise (Topjava)</a> internship application
app.login=Login as
app.main=Main
app.editor=Lunch editor
app.profile=Profile

common.save=Save
common.cancel=Cancel
common.confirm=Are you sure?
common.view=View
common.edit=Edit
common.deleted=Record deleted
common.saved=Record saved
common.enabled=Record enabled
common.disabled=Record disabled
common.group.enabled=Records enabled
common.group.disabled=Records disabled
common.errorStatus=Error status
common.search=Search
common.info=Showing _START_ to _END_ of _TOTAL_ entries
common.infoEmpty=Showing 0 to 0 of 0 entries
common.emptyTable=No data available in table

login.error=Bad credentials.
login.success=You have successfully logout.

error.appError=Application error
error.dataNotFound=Data not found
error.dataError=Data error
error.dataDisabled=Data error. Activate entity.
error.restaurantConstraintViolation=Data error. Delete restaurant dishes.
error.dishRefConstraintViolation=Data error. Dish doesn't belong to the restaurant
error.validationError=Validation error
error.wrongRequest=Wrong request

exception.user.duplicateEmail=user with this email already exists
exception.restaurant.duplicateNameAndAddress=restaurant with this name and address already exists
exception.menu-item.duplicateNameAndDate=menu item with this name and date already exists
exception.menu-item.duplicateDishRefAndDate=menu item with this dishRef and date already exists

profile.edit=Edit profile
profile.register=Registration
profile.registered=You are registered. Please Sign in.

user.title=Users
user.add=Add user
user.edit=Edit user
user.name=Name
user.email=Email
user.roles=Roles
user.active=Active
user.registered=Registered
user.password=Password
user.role=Role

restaurant.title=Restaurants
restaurant.editor=Restaurants Editor
restaurant.add=Add restaurant
restaurant.edit=Edit restaurant
restaurant.name=Name
restaurant.address=Address
restaurant.active=Active
restaurant.menu=Menu

menu-item.title=Menu
menu-item.editor=Menu editor
menu-item.filter=Filter
menu-item.startDate=From date (inclusive)
menu-item.endDate=To date (inclusive)
menu-item.add=Add dish
menu-item.edit=Edit dish
menu-item.name=Name
menu-item.price=Price
menu-item.actualDate=Date
menu-item.actualDate.format=yyyy-mm-dd
menu-item.active=Active